#!/usr/bin/env zsh
# -*- mode: zsh; sh-indentation: 2; indent-tabs-mode: nil; sh-basic-offset: 2; -*-
# vim: ft=zsh sw=2 ts=2 et

autoload -Uz compinit
local zcompf="${ZI[CACHE_DIR]:-${XDG_CACHE_HOME:-${ZDOTDIR:-$HOME/.cache}}/zi}"
local zcompf_a="${zcompf}.augur"

  # Globing (#qN.mh+24):
  # - '#q' is an explicit glob qualifier that makes globing work within zsh's [[ ]] construct.
  # - 'N' makes the glob pattern evaluate to nothing when it doesn't match (rather than throw a globing error)
  - '.' matches "regular files"
  # - 'mh+24' matches files, directories and etc., that are older than 24 hours.

  if [[ -e "$zcompf_a" && -f "$zcompf_a"(#qN.mh+24) ]]; then
    compinit -d "$zcompf"
    command touch "$zcompf_a"
  else
    compinit -C -d "$zcompf"
  fi

  # if .zcompdump exists (and is non-zero), and is older than the .zwc file, then regenerate
  if [[ -s "$zcompf" && (! -s "${zcompf}.zwc" || "$zcompf" -nt "${zcompf}.zwc") ]]; then
    # since file is mapped, it might be mapped right now (current shells), so rename it then make a new one
    [[ -e "$zcompf.zwc" ]] && command mv -f "$zcompf.zwc" "$zcompf.zwc.old"
    # compile it mapped, so multiple shells can share it (total mem reduction) run in background
    { zcompile -M "$zcompf" && command rm -f "$zcompf.zwc.old" }&!
  fi

unset zcompf
